{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tuong\\\\Desktop\\\\React\\\\src\\\\pages\\\\Tasks\\\\ListTasks.js\";\nimport React, { Component } from 'react';\nexport default class ListTasks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getTasks = props => {\n      (async () => {\n        const rawResponse = await fetch('/tasks/', {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        });\n        const response = await rawResponse.json();\n\n        if (response != null && response.length > 0) {\n          this.setState({\n            Tasks: response\n          });\n        }\n      })();\n    };\n\n    this.state = {\n      Tasks: []\n    };\n  }\n\n  componentDidMount() {\n    getTasks();\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-content table-bordered table-dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"StartDate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"EndDate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Tasks != null ? this.state.Tasks.map((Task, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Task.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Task.Type === 1 ? \"Urgent\" : \"Midium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Task.Status === 1 ? \"Pending\" : \"Assigned\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this);\n        }) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Tuong/Desktop/React/src/pages/Tasks/ListTasks.js"],"names":["React","Component","ListTasks","constructor","props","getTasks","rawResponse","fetch","method","headers","response","json","length","setState","Tasks","state","componentDidMount","render","console","log","map","Task","index","Name","Type","Status"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAC7CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,QATmB,GASPD,KAAD,IAAW;AAClB,OAAC,YAAY;AACT,cAAME,WAAW,GAAG,MAAMC,KAAK,CAAC,SAAD,EAAY;AACvCC,UAAAA,MAAM,EAAE,KAD+B;AAEvCC,UAAAA,OAAO,EAAE;AACL,sBAAU,kBADL;AAEL,4BAAgB;AAFX;AAF8B,SAAZ,CAA/B;AAOA,cAAMC,QAAQ,GAAG,MAAMJ,WAAW,CAACK,IAAZ,EAAvB;;AACA,YAAID,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAACE,MAAT,GAAkB,CAA1C,EAA6C;AACzC,eAAKC,QAAL,CAAc;AAAEC,YAAAA,KAAK,EAAEJ;AAAT,WAAd;AACH;AACJ,OAZD;AAaH,KAvBkB;;AAEf,SAAKK,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AACDE,EAAAA,iBAAiB,GAAG;AAChBX,IAAAA,QAAQ;AACX;;AAgBDY,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB;AACA,wBACI;AAAO,MAAA,SAAS,EAAC,yCAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAA,kBACKU,KAAK,IAAI,IAAT,GAAgB,KAAKC,KAAL,CAAWD,KAAX,CAAiBM,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnD,8BACI;AAAA,oCACI;AAAA,wBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAKF,IAAI,CAACG,IAAL,KAAc,CAAd,GAAkB,QAAlB,GAA6B;AAAlC;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA,wBAAKH,IAAI,CAACI,MAAL,KAAgB,CAAhB,GAAoB,SAApB,GAAgC;AAArC;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA,aAASH,KAAT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAQH,SATgB,CAAhB,GASI;AAVT;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA0BH;;AArD4C","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class ListTasks extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            Tasks: []\r\n        }\r\n    };\r\n    componentDidMount() {\r\n        getTasks();\r\n    }\r\n    getTasks = (props) => {\r\n        (async () => {\r\n            const rawResponse = await fetch('/tasks/', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            const response = await rawResponse.json();\r\n            if (response != null && response.length > 0) {\r\n                this.setState({ Tasks: response });\r\n            }\r\n        })();\r\n    }\r\n    render() {\r\n        console.log(this.props);\r\n        return (\r\n            <table className=\"table-content table-bordered table-dark\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>No.</th>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Status</th>\r\n                        <th>StartDate</th>\r\n                        <th>EndDate</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Tasks != null ? this.state.Tasks.map((Task, index) => {\r\n                        return (\r\n                            <tr key={index}>\r\n                                <td>{index}</td>\r\n                                <td>{Task.Name}</td>\r\n                                <td>{Task.Type === 1 ? \"Urgent\" : \"Midium\"}</td>\r\n                                <td>{Task.Status === 1 ? \"Pending\" : \"Assigned\"}</td>\r\n                            </tr>\r\n                        )\r\n                    }) : \"\"}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}