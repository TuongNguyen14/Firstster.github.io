{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tuong\\\\Desktop\\\\React\\\\src\\\\components\\\\Project.js\";\nimport { response } from 'express';\nimport React, { Component } from 'react';\nexport default class Project extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Projects: []\n    };\n  }\n\n  componentDidMount() {\n    (async () => {\n      const rawResponse = await fetch('/projects/', {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log();\n\n      if (rawResponse.status === 401) {\n        window.location.href = \"/Login\";\n      } else {\n        await rawResponse.json().then(data => {\n          console.log(data);\n          this.setState({\n            Projects: data\n          });\n          this.props.onChange(data[0]._id);\n        });\n      }\n    })();\n  }\n\n  handleChangeProject(event) {\n    this.props.onChange(event.target.value);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control\",\n      onChange: this.handleChangeProject.bind(this),\n      children: this.state.Projects.map((project, index) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: project._id,\n          children: project.Name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Tuong/Desktop/React/src/components/Project.js"],"names":["response","React","Component","Project","constructor","props","state","Projects","componentDidMount","rawResponse","fetch","method","headers","console","log","status","window","location","href","json","then","data","setState","onChange","_id","handleChangeProject","event","target","value","render","bind","map","project","index","Name"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,SAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC3CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,KAAC,YAAY;AACT,YAAMC,WAAW,GAAG,MAAMC,KAAK,CAAC,YAAD,EAAe;AAC1CC,QAAAA,MAAM,EAAE,KADkC;AAE1CC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX;AAFiC,OAAf,CAA/B;AAOAC,MAAAA,OAAO,CAACC,GAAR;;AACA,UAAIL,WAAW,CAACM,MAAZ,KAAuB,GAA3B,EAAgC;AAC5BC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACH,OAFD,MAGK;AACD,cAAMT,WAAW,CAACU,IAAZ,GAAmBC,IAAnB,CAAwBC,IAAI,IAAI;AAClCR,UAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACA,eAAKC,QAAL,CAAc;AAAEf,YAAAA,QAAQ,EAAEc;AAAZ,WAAd;AACA,eAAKhB,KAAL,CAAWkB,QAAX,CAAoBF,IAAI,CAAC,CAAD,CAAJ,CAAQG,GAA5B;AACH,SAJK,CAAN;AAKH;AACJ,KAnBD;AAoBH;;AAEDC,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACvB,SAAKrB,KAAL,CAAWkB,QAAX,CAAoBG,KAAK,CAACC,MAAN,CAAaC,KAAjC;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,QAAQ,EAAE,KAAKJ,mBAAL,CAAyBK,IAAzB,CAA8B,IAA9B,CAA3C;AAAA,gBACK,KAAKxB,KAAL,CAAWC,QAAX,CAAoBwB,GAApB,CAAwB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACzC,4BACI;AAAoB,UAAA,KAAK,EAAED,OAAO,CAACR,GAAnC;AAAA,oBAAyCQ,OAAO,CAACE;AAAjD,WAAaD,KAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA5C0C","sourcesContent":["import { response } from 'express';\r\nimport React, { Component } from 'react'\r\n\r\nexport default class Project extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            Projects: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        (async () => {\r\n            const rawResponse = await fetch('/projects/', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            console.log()\r\n            if (rawResponse.status === 401) {\r\n                window.location.href = \"/Login\"\r\n            }\r\n            else {\r\n                await rawResponse.json().then(data => {\r\n                    console.log(data)\r\n                    this.setState({ Projects: data });\r\n                    this.props.onChange(data[0]._id);\r\n                });\r\n            }\r\n        })();\r\n    }\r\n\r\n    handleChangeProject(event) {\r\n        this.props.onChange(event.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <select className=\"form-control\" onChange={this.handleChangeProject.bind(this)}>\r\n                {this.state.Projects.map((project, index) => {\r\n                    return (\r\n                        <option key={index} value={project._id}>{project.Name}</option>\r\n                    )\r\n                })}\r\n            </select>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}