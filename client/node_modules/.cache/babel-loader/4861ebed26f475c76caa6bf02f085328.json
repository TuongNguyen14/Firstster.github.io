{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tuong\\\\Desktop\\\\React\\\\frontend\\\\src\\\\components\\\\Navlinks.js\";\nimport React, { useState } from \"react\";\nimport * as icons from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nclass Navlinks extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.GetActiveLink = () => {\n      var activelink = Items.find(e => e.link === location.pathname);\n      if (activelink) return activelink.id;else return \"1\";\n    };\n\n    this.state = {\n      activeId: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      activeId: GetActiveLink()\n    });\n  }\n\n  render() {\n    console.log(\"test\");\n    const location = useLocation();\n    const Items = [{\n      id: \"1\",\n      text: \"Home\",\n      link: \"/\",\n      icons: /*#__PURE__*/_jsxDEV(icons.FaHome, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 56\n      }, this)\n    }, {\n      id: \"2\",\n      text: \"ManageTasks\",\n      link: \"/ManageTasks\",\n      icons: /*#__PURE__*/_jsxDEV(icons.FaTasks, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 74\n      }, this)\n    }, {\n      id: \"3\",\n      text: \"ManageUsers\",\n      link: \"/ManageUsers\",\n      icons: /*#__PURE__*/_jsxDEV(icons.FaUser, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 74\n      }, this)\n    }];\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-unstyled\",\n      children: Items.map(item => {\n        if (item.subitems) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\" + item.id + \"_dropdown\",\n              \"aria-expanded\": \"false\",\n              \"data-toggle\": \"collapse\",\n              class: \"collapsed\"\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              id: item.id + \"_dropdown\",\n              className: \"list-unstyled collapse\",\n              children: item.subitems.map(subitem => {\n                /*#__PURE__*/\n                _jsxDEV(\"li\", {\n                  onClick: () => setActiveId(item.id + \"|\" + subitem.id),\n                  className: this.state.activeId.split('|')[1] === subitem.id ? \"active\" : \"\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: subitem.link,\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      children: subitem.icons\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 45,\n                      columnNumber: 73\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: subitem.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 45,\n                      columnNumber: 95\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 49\n                  }, this)\n                }, subitem.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this);\n        } else return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setActiveId(item.id),\n          className: this.state.activeId === item.id || this.state.activeId.split('|')[0] === item.id ? \"active\" : \"\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: item.link,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: item.icons\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 54\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 73\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Navlinks;","map":{"version":3,"sources":["C:/Users/Tuong/Desktop/React/frontend/src/components/Navlinks.js"],"names":["React","useState","icons","Link","useLocation","Navlinks","PureComponent","constructor","props","GetActiveLink","activelink","Items","find","e","link","location","pathname","id","state","activeId","componentDidMount","setState","render","console","log","text","map","item","subitems","subitem","setActiveId","split"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport * as icons from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nclass Navlinks extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeId: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            activeId: GetActiveLink()\r\n        })\r\n    }\r\n\r\n    GetActiveLink = () => {\r\n        var activelink = Items.find(e => e.link === location.pathname);\r\n        if (activelink) return activelink.id;\r\n        else return \"1\";\r\n    }\r\n\r\n    render() {\r\n        console.log(\"test\")\r\n        const location = useLocation();\r\n        const Items = [\r\n            { id: \"1\", text: \"Home\", link: \"/\", icons: <icons.FaHome /> },\r\n            { id: \"2\", text: \"ManageTasks\", link: \"/ManageTasks\", icons: <icons.FaTasks /> },\r\n            { id: \"3\", text: \"ManageUsers\", link: \"/ManageUsers\", icons: <icons.FaUser /> }\r\n        ];\r\n        return (\r\n            <ul className=\"list-unstyled\">\r\n                {\r\n                    Items.map((item) => {\r\n                        if (item.subitems) {\r\n                            return (\r\n                                <li>\r\n                                    <a key={item.id} href={\"#\" + item.id + \"_dropdown\"} aria-expanded=\"false\" data-toggle=\"collapse\" class=\"collapsed\"></a>\r\n                                    <ul id={item.id + \"_dropdown\"} className=\"list-unstyled collapse\">\r\n                                        {item.subitems.map((subitem) => {\r\n                                            <li key={subitem.id} onClick={() => setActiveId(item.id + \"|\" + subitem.id)} className={this.state.activeId.split('|')[1] === subitem.id ? \"active\" : \"\"}>\r\n                                                <Link to={subitem.link}><i>{subitem.icons}</i><span>{subitem.text}</span></Link>\r\n                                            </li>\r\n                                        })}\r\n                                    </ul>\r\n                                </li>\r\n                            )\r\n                        }\r\n                        else return (\r\n                            <li key={item.id} onClick={() => setActiveId(item.id)} className={this.state.activeId === item.id || this.state.activeId.split('|')[0] === item.id ? \"active\" : \"\"}>\r\n                                <Link to={item.link}><i>{item.icons}</i><span>{item.text}</span></Link>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Navlinks;"]},"metadata":{},"sourceType":"module"}