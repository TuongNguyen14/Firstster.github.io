{"ast":null,"code":"import * as api from \"./library/api\";\nimport * as ultility from \"./library/ultility\";\nimport swal from 'sweetalert2';\nexport const GetUser = () => {\n  try {\n    var cookie = ultility.GetCookie(\"user\");\n\n    if (cookie) {\n      var decode = ultility.DecodeCookie(cookie);\n      var user = JSON.parse(decode);\n      return user;\n    } else return null;\n  } catch (e) {}\n};\n_c = GetUser;\nexport const Authenticate = data => {\n  var json = JSON.stringify(data);\n  var encode = ultility.EncodeCookie(json);\n  ultility.SetCookie(\"user\", encode, 30);\n  return true;\n};\n_c2 = Authenticate;\nexport const Login = async credentials => {\n  try {\n    const response = await api.Post(\"/authenticate/\", credentials);\n\n    if (response && response.type === 1) {\n      Authenticate(response.data);\n      ultility.DeleteCookie(\"uname\");\n      window.location.href = '/';\n    } else swal.fire({\n      type: \"error\",\n      html: response.message\n    });\n  } catch (e) {\n    throw e;\n  }\n};\n_c3 = Login;\nexport const Logout = async () => {\n  await api.Post(\"/Logout/\", null);\n  var user = JSON.parse(ultility.DecodeCookie(ultility.GetCookie(\"user\")));\n  ultility.SetCookie(\"uname\", ultility.EncodeCookie(user.username));\n  ultility.DeleteCookie(\"user\");\n  window.location.href = '/Login';\n};\n_c4 = Logout;\nexport const CheckAuthentication = async () => {\n  var user = GetUser();\n  if (user) return true;else {\n    user = await api.Post('/authenticate', null);\n\n    if (user) {\n      Authenticate(user);\n      return true;\n    }\n  }\n  return false;\n};\n_c5 = CheckAuthentication;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"GetUser\");\n$RefreshReg$(_c2, \"Authenticate\");\n$RefreshReg$(_c3, \"Login\");\n$RefreshReg$(_c4, \"Logout\");\n$RefreshReg$(_c5, \"CheckAuthentication\");","map":{"version":3,"sources":["C:/Users/Tuong/Desktop/React/frontend/src/security.js"],"names":["api","ultility","swal","GetUser","cookie","GetCookie","decode","DecodeCookie","user","JSON","parse","e","Authenticate","data","json","stringify","encode","EncodeCookie","SetCookie","Login","credentials","response","Post","type","DeleteCookie","window","location","href","fire","html","message","Logout","username","CheckAuthentication"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,eAArB;AACA,OAAO,KAAKC,QAAZ,MAA0B,oBAA1B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,MAAI;AACA,QAAIC,MAAM,GAAGH,QAAQ,CAACI,SAAT,CAAmB,MAAnB,CAAb;;AACA,QAAID,MAAJ,EAAY;AACR,UAAIE,MAAM,GAAGL,QAAQ,CAACM,YAAT,CAAsBH,MAAtB,CAAb;AACA,UAAII,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,MAAX,CAAX;AACA,aAAOE,IAAP;AACH,KAJD,MAIO,OAAO,IAAP;AACV,GAPD,CAOE,OAAOG,CAAP,EAAU,CAEX;AACJ,CAXM;KAAMR,O;AAab,OAAO,MAAMS,YAAY,GAAIC,IAAD,IAAU;AAClC,MAAIC,IAAI,GAAGL,IAAI,CAACM,SAAL,CAAeF,IAAf,CAAX;AACA,MAAIG,MAAM,GAAGf,QAAQ,CAACgB,YAAT,CAAsBH,IAAtB,CAAb;AACAb,EAAAA,QAAQ,CAACiB,SAAT,CAAmB,MAAnB,EAA2BF,MAA3B,EAAmC,EAAnC;AACA,SAAO,IAAP;AACH,CALM;MAAMJ,Y;AAOb,OAAO,MAAMO,KAAK,GAAG,MAAOC,WAAP,IAAuB;AACxC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMrB,GAAG,CAACsB,IAAJ,CAAS,gBAAT,EAA2BF,WAA3B,CAAvB;;AACA,QAAIC,QAAQ,IAAIA,QAAQ,CAACE,IAAT,KAAkB,CAAlC,EAAqC;AACjCX,MAAAA,YAAY,CAACS,QAAQ,CAACR,IAAV,CAAZ;AACAZ,MAAAA,QAAQ,CAACuB,YAAT,CAAsB,OAAtB;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACH,KAJD,MAKKzB,IAAI,CAAC0B,IAAL,CAAU;AACXL,MAAAA,IAAI,EAAE,OADK;AAEXM,MAAAA,IAAI,EAAER,QAAQ,CAACS;AAFJ,KAAV;AAIR,GAXD,CAYA,OAAOnB,CAAP,EAAU;AACN,UAAMA,CAAN;AACH;AACJ,CAhBM;MAAMQ,K;AAkBb,OAAO,MAAMY,MAAM,GAAG,YAAY;AAC9B,QAAM/B,GAAG,CAACsB,IAAJ,CAAS,UAAT,EAAqB,IAArB,CAAN;AACA,MAAId,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWT,QAAQ,CAACM,YAAT,CAAsBN,QAAQ,CAACI,SAAT,CAAmB,MAAnB,CAAtB,CAAX,CAAX;AACAJ,EAAAA,QAAQ,CAACiB,SAAT,CAAmB,OAAnB,EAA4BjB,QAAQ,CAACgB,YAAT,CAAsBT,IAAI,CAACwB,QAA3B,CAA5B;AACA/B,EAAAA,QAAQ,CAACuB,YAAT,CAAsB,MAAtB;AACAC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACH,CANM;MAAMI,M;AAQb,OAAO,MAAME,mBAAmB,GAAG,YAAY;AAC3C,MAAIzB,IAAI,GAAGL,OAAO,EAAlB;AACA,MAAIK,IAAJ,EAAU,OAAO,IAAP,CAAV,KACK;AACDA,IAAAA,IAAI,GAAG,MAAMR,GAAG,CAACsB,IAAJ,CAAS,eAAT,EAA0B,IAA1B,CAAb;;AACA,QAAId,IAAJ,EAAU;AACNI,MAAAA,YAAY,CAACJ,IAAD,CAAZ;AACA,aAAO,IAAP;AACH;AACJ;AACD,SAAO,KAAP;AACH,CAXM;MAAMyB,mB","sourcesContent":["import * as api from \"./library/api\";\r\nimport * as ultility from \"./library/ultility\";\r\nimport swal from 'sweetalert2'\r\n\r\nexport const GetUser = () => {\r\n    try {\r\n        var cookie = ultility.GetCookie(\"user\");\r\n        if (cookie) {\r\n            var decode = ultility.DecodeCookie(cookie);\r\n            var user = JSON.parse(decode);\r\n            return user;\r\n        } else return null;\r\n    } catch (e) {\r\n\r\n    }\r\n};\r\n\r\nexport const Authenticate = (data) => {\r\n    var json = JSON.stringify(data);\r\n    var encode = ultility.EncodeCookie(json);\r\n    ultility.SetCookie(\"user\", encode, 30);\r\n    return true;\r\n}\r\n\r\nexport const Login = async (credentials) => {\r\n    try {\r\n        const response = await api.Post(\"/authenticate/\", credentials)\r\n        if (response && response.type === 1) {\r\n            Authenticate(response.data);\r\n            ultility.DeleteCookie(\"uname\");\r\n            window.location.href = '/'\r\n        }\r\n        else swal.fire({\r\n            type: \"error\",\r\n            html: response.message\r\n        })\r\n    }\r\n    catch (e) {\r\n        throw e;\r\n    }\r\n}\r\n\r\nexport const Logout = async () => {\r\n    await api.Post(\"/Logout/\", null);\r\n    var user = JSON.parse(ultility.DecodeCookie(ultility.GetCookie(\"user\")));\r\n    ultility.SetCookie(\"uname\", ultility.EncodeCookie(user.username));\r\n    ultility.DeleteCookie(\"user\");\r\n    window.location.href = '/Login'\r\n}\r\n\r\nexport const CheckAuthentication = async () => {\r\n    var user = GetUser();\r\n    if (user) return true;\r\n    else {\r\n        user = await api.Post('/authenticate', null)\r\n        if (user) {\r\n            Authenticate(user);\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}"]},"metadata":{},"sourceType":"module"}