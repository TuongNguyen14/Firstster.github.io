{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tuong\\\\Desktop\\\\React\\\\frontend\\\\src\\\\components\\\\Project.js\";\nimport React, { Component } from 'react';\nexport default class Project extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Projects: []\n    };\n  }\n\n  componentDidMount() {// (async () => {\n    //     const rawResponse = await fetch('/projects/', {\n    //         method: 'GET',\n    //         headers: {\n    //             'Accept': 'application/json',\n    //             'Content-Type': 'application/json'\n    //         }\n    //     });\n    //     try {\n    //         if (rawResponse.status === 401) {\n    //             //global.HandleUnauthorized();\n    //         }\n    //         else\n    //             await rawResponse.json().then(data => {\n    //                 this.setState({ Projects: data });\n    //                 this.props.onChange(data[0]._id);\n    //             });\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // })();\n  }\n\n  handleChangeProject(event) {\n    this.props.onChange(event.target.value);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control\",\n      onChange: this.handleChangeProject.bind(this),\n      children: this.state.Projects.map((project, index) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: project._id,\n          children: project.Name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Tuong/Desktop/React/frontend/src/components/Project.js"],"names":["React","Component","Project","constructor","props","state","Projects","componentDidMount","handleChangeProject","event","onChange","target","value","render","bind","map","project","index","_id","Name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC3CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAG,CAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDC,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACvB,SAAKL,KAAL,CAAWM,QAAX,CAAoBD,KAAK,CAACE,MAAN,CAAaC,KAAjC;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,QAAQ,EAAE,KAAKL,mBAAL,CAAyBM,IAAzB,CAA8B,IAA9B,CAA3C;AAAA,gBACK,KAAKT,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAwB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACzC,4BACI;AAAoB,UAAA,KAAK,EAAED,OAAO,CAACE,GAAnC;AAAA,oBAAyCF,OAAO,CAACG;AAAjD,WAAaF,KAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA7C0C","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Project extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            Projects: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // (async () => {\r\n        //     const rawResponse = await fetch('/projects/', {\r\n        //         method: 'GET',\r\n        //         headers: {\r\n        //             'Accept': 'application/json',\r\n        //             'Content-Type': 'application/json'\r\n        //         }\r\n        //     });\r\n        //     try {\r\n        //         if (rawResponse.status === 401) {\r\n        //             //global.HandleUnauthorized();\r\n        //         }\r\n        //         else\r\n        //             await rawResponse.json().then(data => {\r\n        //                 this.setState({ Projects: data });\r\n        //                 this.props.onChange(data[0]._id);\r\n        //             });\r\n        //     } catch (error) {\r\n        //         console.log(error)\r\n        //     }\r\n        // })();\r\n    }\r\n\r\n    handleChangeProject(event) {\r\n        this.props.onChange(event.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <select className=\"form-control\" onChange={this.handleChangeProject.bind(this)}>\r\n                {this.state.Projects.map((project, index) => {\r\n                    return (\r\n                        <option key={index} value={project._id}>{project.Name}</option>\r\n                    )\r\n                })}\r\n            </select>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}